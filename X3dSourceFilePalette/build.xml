<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<project name="X3D-Edit Module" default="run" basedir="." xmlns:resolver="antlib:org.apache.maven.resolver.ant">
    <description>X3D-Edit module: builds, tests, and runs the project org.web3d.x3d.palette.</description>
    <import file="nbproject/build-impl.xml"/>

    <property file="nbproject/project.properties"/>

  <taskdef uri="antlib:org.apache.maven.resolver.ant"
           resource="org/apache/maven/resolver/ant/antlib.xml"
           classpath="lib/maven-resolver-ant-tasks-1.5.2-uber.jar" /> <!-- was 1.4.0 -->
  <!-- instructions https://maven.apache.org/resolver-ant-tasks/https://maven.apache.org/resolver-ant-tasks/ -->
  <!-- jar found at https://repo.maven.apache.org/maven2/org/apache/maven/resolver/maven-resolver-ant-tasks/1.5.2/maven-resolver-ant-tasks-1.5.2-uber.jar -->

    <!-- override -->
    <target name="clean" depends="projectized-common.clean,-post-clean"/>

    <target name="moduleVersion" depends="projectized-common.-javadoc-init">
        <echo message="mf.OpenIDE-Module-Implementation-Version=${mf.OpenIDE-Module-Implementation-Version}"/>
        <echo file="moduleVersion.properties" message="module.version=${mf.OpenIDE-Module-Implementation-Version}"/>
    </target>

    <!-- Ensure the latest Q/A materials -->
    <target name="-post-clean">
        <delete dir="${x3dDtdsSchemas.dir}"/>
        <delete dir="${x3dSchematron.dir}"/>
        <delete dir="${x3dStylesheets.dir}"/>

        <mkdir dir="${x3dDtdsSchemas.dir}"/>
        <mkdir dir="${x3dSchematron.dir}"/>
        <mkdir dir="${x3dStylesheets.dir}"/>
    </target>

    <target name="get.latest.DTDs" description="Download latest DTD files from version control">

        <get src="${x3d.sourceforge.site}/specifications/catalog.dtd"
                             dest="${x3dDtdsSchemas.dir}/catalog.dtd"             usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-InputOutputFields.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-InputOutputFields.dtd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-Web3dExtensions.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-Web3dExtensions.dtd"               usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-Web3dExtensionsPrivate.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-Web3dExtensionsPrivate.dtd"        usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-Web3dExtensionsAmendment1.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-Web3dExtensionsAmendment1.dtd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-Web3dExtensionsPublic.Specification.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-Web3dExtensionsPublic.Specification.dtd"               usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-Web3dExtensionsPublic.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-Web3dExtensionsPublic.dtd"         usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0.dtd"               usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-3.1-InputOutputFields.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.1-InputOutputFields.dtd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.1-Web3dExtensionsPrivate.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.1-Web3dExtensionsPrivate.dtd"        usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.1-Web3dExtensionsPublic.Specification.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.1-Web3dExtensionsPublic.Specification.dtd"               usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.1-Web3dExtensionsPublic.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.1-Web3dExtensionsPublic.dtd"         usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.1.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.1.dtd"               usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-3.2-InputOutputFields.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.2-InputOutputFields.dtd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.2-Web3dExtensionsPrivate.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.2-Web3dExtensionsPrivate.dtd"        usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.2-Web3dExtensionsPublic.Specification.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.2-Web3dExtensionsPublic.Specification.dtd"               usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.2-Web3dExtensionsPublic.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.2-Web3dExtensionsPublic.dtd"         usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.2.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.2.dtd"               usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-3.3-InputOutputFields.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.3-InputOutputFields.dtd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.3-Web3dExtensionsPrivate.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.3-Web3dExtensionsPrivate.dtd"        usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.3-Web3dExtensionsPublic.Specification.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.3-Web3dExtensionsPublic.Specification.dtd"               usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.3-Web3dExtensionsPublic.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.3-Web3dExtensionsPublic.dtd"         usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.3.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.3.dtd"               usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-4.0-InputOutputFields.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-4.0-InputOutputFields.dtd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-4.0-Web3dExtensionsPrivate.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-4.0-Web3dExtensionsPrivate.dtd"        usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-4.0-Web3dExtensionsPublic.Specification.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-4.0-Web3dExtensionsPublic.Specification.dtd"               usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-4.0-Web3dExtensionsPublic.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-4.0-Web3dExtensionsPublic.dtd"         usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-4.0.dtd"
                             dest="${x3dDtdsSchemas.dir}/x3d-4.0.dtd"               usetimestamp="true" verbose="true"/>
    </target>

    <target name="get.latest.schemas" description="Download latest Schema files from version control">

        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.1.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.1.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.2.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.2.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.3.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.3.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-4.0.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-4.0.xsd"             usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/OasisXmlCatalogX3D.xml"
                             dest="${x3dDtdsSchemas.dir}/OasisXmlCatalogX3D.xml"             usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-Web3dExtensionsAmendment1.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-Web3dExtensionsAmendment1.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-Web3dExtensionsPrivate.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-Web3dExtensionsPrivate.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-Web3dExtensionsPublic.Specification.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-Web3dExtensionsPublic.Specification.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.0-Web3dExtensionsPublic.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.0-Web3dExtensionsPublic.xsd"             usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-3.1-Web3dExtensionsPrivate.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.1-Web3dExtensionsPrivate.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.1-Web3dExtensionsPublic.Specification.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.1-Web3dExtensionsPublic.Specification.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.1-Web3dExtensionsPublic.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.1-Web3dExtensionsPublic.xsd"             usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-3.2-Web3dExtensionsPrivate.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.2-Web3dExtensionsPrivate.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.2-Web3dExtensionsPublic.Specification.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.2-Web3dExtensionsPublic.Specification.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.2-Web3dExtensionsPublic.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.2-Web3dExtensionsPublic.xsd"             usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-3.3-Web3dExtensionsPrivate.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.3-Web3dExtensionsPrivate.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.3-Web3dExtensionsPublic.Specification.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.3-Web3dExtensionsPublic.Specification.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-3.3-Web3dExtensionsPublic.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-3.3-Web3dExtensionsPublic.xsd"             usetimestamp="true" verbose="true"/>

        <get src="${x3d.sourceforge.site}/specifications/x3d-4.0-Web3dExtensionsPrivate.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-4.0-Web3dExtensionsPrivate.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-4.0-Web3dExtensionsPublic.Specification.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-4.0-Web3dExtensionsPublic.Specification.xsd"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/specifications/x3d-4.0-Web3dExtensionsPublic.xsd"
                             dest="${x3dDtdsSchemas.dir}/x3d-4.0-Web3dExtensionsPublic.xsd"             usetimestamp="true" verbose="true"/>
    </target>

    <target name="get.latest.schematrons" description="Download latest Schematron files from version control">

        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/build.xml"
                             dest="${x3dSchematron.dir}/build.xml"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/buildSchematronDevelopment.xml"
                             dest="${x3dSchematron.dir}/buildSchematronDevelopment.xml"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/SvrlReportText.xslt"
                             dest="${x3dSchematron.dir}/SvrlReportText.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/X3dSchematronValidityChecks.xslt"
                             dest="${x3dSchematron.dir}/X3dSchematronValidityChecks.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/X3dSchematronValidityChecks.xslt"
                             dest="${x3dSchematron.dir}/X3dSchematronValidityChecks.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/iso_abstract_expand.xsl"
                             dest="${x3dSchematron.dir}/iso_abstract_expand.xsl"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/iso_dsdl_include.xsl"
                             dest="${x3dSchematron.dir}/iso_dsdl_include.xsl"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/iso_schematron_skeleton_for_saxon.xsl"
                             dest="${x3dSchematron.dir}/iso_schematron_skeleton_for_saxon.xsl"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/iso_schematron_skeleton_for_xslt1.xsl"
                             dest="${x3dSchematron.dir}/iso_schematron_skeleton_for_xslt1.xsl"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/iso_svrl.xsl"
                             dest="${x3dSchematron.dir}/iso_svrl.xsl"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/tools/schematron/iso_svrl_for_xslt2.xsl"
                             dest="${x3dSchematron.dir}/iso_svrl_for_xslt2.xsl"             usetimestamp="true" verbose="true"/>
    </target>

    <property name="xj3d.dir" value="C:\x3d-nps-gitlab\xj3d\"/> <!-- TODO: this prop should be placed in a private.properties file -->
    <target name="get.latest.Xj3D.jars.local" description="Download latest Xj3D jar files from local build">
        <echo message="prerequisite: Xj3D build all"/>
        <copy todir="release/modules/ext/" preservelastmodified="true" overwrite="true" force="true" verbose="true">
            <fileset dir="${xj3d.dir}/jars/" includes="aviatrix3d-all_3.1.1-nps.jar"/>
            <fileset dir="${xj3d.dir}/jars/" includes="jogamp-fat.jar"/>
            <fileset dir="${xj3d.dir}/jars/" includes="xj3d-2.3-3rdparty-nps.jar"/>
            <fileset dir="${xj3d.dir}/jars/" includes="xj3d-2.3-nps.jar"/>
            <fileset dir="${xj3d.dir}/jars/" includes="xj3d.browser_2.3.0-nps.jar"/>
            <fileset dir="${xj3d.dir}/jars/" includes="xj3d.cadfilter_2.3.0-nps.jar"/>
        </copy>
    </target>
    <!-- TODO target name="get.latest.Xj3D.jars.sourceforge" -->

    <!-- TODO is this needed or is latest Xj3D jar used? -->
    <target name="get.latest.opendis7.full.jar" description="Download latest opendis7.full.jar file from Savage distribution">
    <!--<get src="https://savage.nps.edu/opendis7-java/opendis7-full.jar" -->
        <get src="https://gitlab.nps.edu/Savage/NetworkedGraphicsMV3500/-/raw/master/lib/opendis7-full.jar?ref_type=heads"
            dest="release/modules/ext/opendis7-full.jar"             usetimestamp="true" verbose="true"/>
    </target>

    <target name="get.latest.X3DJSAIL.jar" description="Download latest X3DJSAIL jar file from version control">
        <get src="https://www.web3d.org/specifications/java/jars/X3DJSAIL.4.0.full.jar"
            dest="release/modules/ext/X3DJSAIL.4.0.full.jar"             usetimestamp="true" verbose="true"/>
    </target>

    <target name="get.latest.stylesheets" description="Download latest stylesheet files from version control">

        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToX3dvClassicVrmlEncoding.xslt"
             dest="${x3dStylesheets.dir}/X3dToX3dvClassicVrmlEncoding.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToVrml97.xslt"
             dest="${x3dStylesheets.dir}/X3dToVrml97.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dExtrusionToSvgViaXslt2.0.xslt"
             dest="${x3dStylesheets.dir}/X3dExtrusionToSvgViaXslt2.0.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dTidy.xslt"
             dest="${x3dStylesheets.dir}/X3dTidy.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToHtml.xslt"
             dest="${x3dStylesheets.dir}/X3dToHtml.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToXhtml-1.xslt"
             dest="${x3dStylesheets.dir}/X3dToXhtml-1.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToXhtml-2.xslt"
             dest="${x3dStylesheets.dir}/X3dToXhtml-2.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToXhtml-3.xslt"
             dest="${x3dStylesheets.dir}/X3dToXhtml-3.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToXhtml-4.xslt"
             dest="${x3dStylesheets.dir}/X3dToXhtml-4.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToXhtml-5.xslt"
             dest="${x3dStylesheets.dir}/X3dToXhtml-5.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToXhtml.xslt"
             dest="${x3dStylesheets.dir}/X3dToXhtml.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToX3domX_ITE.xslt"
             dest="${x3dStylesheets.dir}/X3dToX3domX_ITE.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToJava.xslt"
             dest="${x3dStylesheets.dir}/X3dToJava.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToJson.xslt"
             dest="${x3dStylesheets.dir}/X3dToJson.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToPython.xslt"
             dest="${x3dStylesheets.dir}/X3dToPython.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dToTurtle.xslt"
             dest="${x3dStylesheets.dir}/X3dToTurtle.xslt"           usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dUnwrap.xslt"
             dest="${x3dStylesheets.dir}/X3dUnwrap.xslt"             usetimestamp="true" verbose="true"/>
        <get src="${x3d.sourceforge.site}/x3d/stylesheets/X3dWrap.xslt"
             dest="${x3dStylesheets.dir}/X3dWrap.xslt"             usetimestamp="true" verbose="true"/>
    </target>

    <target name="get.latest" depends="get.latest.DTDs,get.latest.schemas,get.latest.schematrons,get.latest.stylesheets"/>

    <!-- override -->
    <target name="-pre-compile" depends="projectized-common.-pre-compile">
        <antcall target="get.latest"/>
    </target>

    <!-- We don't need to deploy this file -->
    <target name="-post-netbeans">
        <delete>
            <fileset dir="${suite.dir}/build/cluster/modules/ext">
                <include name="server-cert-keystore-readme.txt"/>
            </fileset>
        </delete>
    </target>
    <target name="netbeans" depends="projectized-common.netbeans,-post-netbeans"/>

    <target name="run" description="run parent X3D-Edit 4.0 Module Suite">
        <echo message="run parent X3D-Edit 4.0 Module Suite" />
        <ant  antfile="${suite.dir}/build.xml" target="run" useNativeBasedir="true" inheritAll="false"/>
    </target>

    <!-- Debug must be initiated from the ${suite.dir}/build.xml IOT avoid URLStreamHandler Error thrown -->
    <target name="debug" description="debug parent X3D-Edit 4.0 Module Suite">
        <echo message="debug parent X3D-Edit 4.0 Module Suite" />
        <ant  antfile="${suite.dir}/build.xml" target="debug" useNativeBasedir="true" inheritAll="false"/>
    </target>

    <target name="view.layers.local" description="view local layer files (NetBeans only)">
        <echo  message="build/classes/META-INF/generated-layer.xml" />
        <nbbrowse file="build/classes/META-INF/generated-layer.xml" />
        <echo  message="src/main/java/org/web3d/x3d/layer.xml" />
        <nbbrowse file="src/main/java/org/web3d/x3d/layer.xml" />
        <!-- TODO implementation-independent approach if possible, but note that other Ant approaches usually have to be customized for each OS. -->
    </target>

    <target name="run.xj3d.browser" description="Run Xj3D Externally from X3D-Edit">
        <ant antfile="${suite.dir}/build.xml" useNativeBasedir="true" inheritAll="false" target="run.xj3d.browser"/>
    </target>

    <!-- Just to confirm what our JVM test args are -->
    <target name="test-preinit" depends="projectized-common.test-preinit">
        <echo message="${test.run.args}"/>
    </target>

    <!-- Perform this task whenever the Savage server cert has changed/updated.
         As per the server-cert-keystore-readme.txt in release/modules/ext, this
         process is now automated. TODO: remove this construct. -->
    <target name="update.server.cert"
            description="To be accomplished anytime there is a certificate change/update, or change in server configuration">
        <echo message="openssl pull down the new/updated server cert"/>
        <!-- TODO obsolete?
        <echo message="n.b. the savage server cert gets updated monthly so this task must be performed periodically,"/>
        <echo message="     for a plugin distribution must have a cert.server.alias and pass entry in your privat properties."/> -->
        <!-- OpenSSL hack: https://serverfault.com/questions/139728/how-to-download-the-ssl-certificate-from-a-website -->
        <exec executable="zsh" dir="release/modules/ext" osfamily="mac">
            <arg value="-c"/>
            <arg value="openssl s_client -servername ${cert.server.alias} -connect ${cert.server.alias}:443 | openssl x509 &gt; ${cert.server.alias}.cer"/>
        </exec>
        <exec executable="/cygwin64/bin/bash" dir="release/modules/ext" osfamily="windows">
            <arg value="-c"/>
            <arg value="openssl s_client -servername ${cert.server.alias} -connect ${cert.server.alias}:443 | openssl x509 &gt; ${cert.server.alias}.crt"/>
        </exec>

        <!-- Start fresh, delete the old keystore -->
        <delete>
            <fileset dir="release/modules/ext">
                <filename name="server-cert-keystore.jks"/>
            </fileset>
        </delete>

        <echo message="importkeystore locally saves new/updated server cert"/>
        <!-- Now, import the JDK's keystore. This is necessary because during
             X3D-Edit runtime, were telling the JVM that all trusts are now
             located in this JKS -->
        <exec executable="keytool" dir="release/modules/ext">
            <arg line='-importkeystore -v -srckeystore "${java.home}"/lib/security/cacerts -srcstorepass ${storepass} -storepass ${storepass} -destkeystore server-cert-keystore.jks'/>
        </exec>

        <echo message="keytool imports the updated Savage server cert into the keystore"/>
        <exec executable="keytool" dir="release/modules/ext" osfamily="mac">
            <arg line="-import -noprompt -alias ${cert.server.alias} -file ${cert.server.alias}.cer -storepass ${storepass} -keystore server-cert-keystore.jks"/>
        </exec>
        <exec executable="keytool" dir="release/modules/ext" osfamily="windows">
            <arg line="-import -noprompt -alias ${cert.server.alias} -file ${cert.server.alias}.crt -storepass ${storepass} -keystore server-cert-keystore.jks"/>
        </exec>

        <!-- Delete the downloaded server cert as it's now imported into the JKS -->
        <!-- Use target inspect.server.cert to verify inclusion in the keystore -->
        <delete>
            <fileset dir="release/modules/ext">
                <filename name="${cert.server.alias}.*"/>
            </fileset>
        </delete>
    </target>

    <target name="inspect.server.cert" description="List the ${cert.server.alias} within release/modules/ext/server-cert-keystore.jks">
        <exec executable="keytool" dir="release/modules/ext">
            <arg line="-list -v -keystore server-cert-keystore.jks -storepass ${storepass} -alias ${cert.server.alias}"/>
        </exec>
    </target>

<!--    <target name="inspect.nbm.self.signing.cert" depends="init" description="Lists the ${nbm_alias} of (NBM self-signing cert) within release/modules/ext/server-cert-keystore.jks">
        <exec executable="keytool" dir="release/modules/ext">
            <arg line="-list -v -keystore server-cert-keystore.jks -storepass ${storepass} -alias ${nbm_alias}"/>
        </exec>
    </target>-->

    <!-- Maven deploy/release targets -->

    <!-- deploy.snapshot will prepare, sign and deploy a snapshot version of the
         NBM to the Sonatype snapshot repository.

         stage.release will prepare, sign and deploy all release artifacts to
         the Sonatype staging repository where the packaged upload can then be
         closed and released from https://s01.oss.sonatype.org
    -->

    <target name="prepare.repositories" depends="init">

        <!-- Can use ${pom.property} syntax with this -->
        <resolver:pom file="pom.xml" id="pom"/>

        <property name="snapshot.nbm" value="${build.dir}/${pom.artifactId}-${pom.version}-SNAPSHOT.nbm"/>
        <property name="release.nbm"  value="${build.dir}/${pom.artifactId}-${pom.version}.nbm"/>
        <property name="sources.jar"  value="${build.dir}/${pom.artifactId}-${pom.version}-sources.jar"/>
        <property name="javadoc.jar"  value="${build.dir}/${pom.artifactId}-${pom.version}-javadoc.jar"/>
        
        <echo message="$central-snapshots-repository-url=${central-snapshots-repository-url}"/>

        <resolver:remoterepo id="central-snapshot" url="${central-snapshots-repository-url}"
                             type="default" releases="false" snapshots="true"
                             updates="always" checksums="fail"/>

        <echo message="$central-staging-repository-url=${central-staging-repository-url}"/>
        
        <resolver:remoterepo id="central" url="${central-staging-repository-url}"
                             type="default" releases="true" snapshots="false"
                             updates="daily" checksums="warn"/>
    </target>

    <target name="deploy.snapshot" depends="clean,prepare.repositories,nbm"
            description="Generate and deploy a SNAPSHOT NBM to Sonatype Open Source Software (OSS) Repository Hosting (OSSRH) snapshot repo">
        <move file="${build.dir}/${code-name-base}.nbm" toFile="${snapshot.nbm}"/>
        <resolver:artifacts id="snapshot">
            <artifact file="${snapshot.nbm}"/>
        </resolver:artifacts>
        <resolver:deploy artifactsref="snapshot">
            <remoteRepo refid="central-snapshot"/>
        </resolver:deploy>
    </target>

    <target name="package" depends="clean,nbm,javadoc" description="Prepare for a Maven release">
        <move file="${build.dir}/${code-name-base}.nbm" toFile="${release.nbm}"/>

        <!-- build the javadoc jar -->
        <jar jarfile="${javadoc.jar}">
            <fileset dir="${netbeans.javadoc.dir}"/>
        </jar>

        <!-- build the sources jar -->
        <jar jarfile="${sources.jar}">
            <fileset dir="${src.dir}"/>
        </jar>
    </target>

    <!-- Macrodef from: https://apache.googlesource.com/pig/+/e22fcb2967489388f07307e3de689a7c9cc9b6f8/build.xml -->
    <target name="sign" depends="clean.sign">
        <macrodef name="sign-artifact" description="GPG signs all artifacts">
            <attribute name="input.file"/>
            <sequential>
                <echo>Signing @{input.file}, Sig File: @{input.file}.asc</echo>
                <exec executable="${gpg}" dir="${basedir}" osfamily="mac">
                    <arg line="-abv @{input.file}"/>
                </exec>
                <exec executable="C:/cygwin64/bin/gpg.exe" dir="${basedir}" osfamily="windows"><!-- /usr/bin/gpg -->
                    <arg line="-abv @{input.file}"/>
                </exec>
            </sequential>
        </macrodef>
        <sign-artifact input.file="pom.xml"/>
        <sign-artifact input.file="${release.nbm}"/>
        <sign-artifact input.file="${sources.jar}"/>
        <sign-artifact input.file="${javadoc.jar}"/>
    </target>

    <target name="clean.sign" depends="init" description="Delete .asc files">
       <delete>
         <fileset dir="${build.dir}" includes="*.asc"/>
         <fileset dir="${basedir}" includes="*.asc"/>
       </delete>
    </target>

    <!--
         *** Make sure to comply with src/doc/ReadMe for Version preparation first ***
    -->
    <!-- Example for deploying .asc files from here: https://github.com/vigna/dsiutils/blob/master/build.xml -->
    <target name="stage.release" depends="prepare.repositories,package,sign"
            description="Generate and deploy a Release NBM and artifacts to Sonatype Open Source Software (OSS) Repository Hosting (OSSRH) staging repo for synching to Maven Central">
        <echo message="stage.release start... build and upload to maven central repository for scanning, review, and accepting"/>
        <resolver:artifacts id="release">
            <!-- pom is automatically deployed -->
            <artifact file="pom.xml.asc" type="pom.asc"/>
            <artifact file="${release.nbm}"/>
            <artifact file="${release.nbm}.asc" type="nbm.asc"/>
            <artifact file="${sources.jar}" classifier="sources"/>
            <artifact file="${sources.jar}.asc" type="jar.asc" classifier="sources"/>
            <artifact file="${javadoc.jar}" classifier="javadoc"/>
            <artifact file="${javadoc.jar}.asc" type="jar.asc" classifier="javadoc"/>
        </resolver:artifacts>
        <resolver:deploy artifactsref="release">
            <remoteRepo refid="central"/>
        </resolver:deploy>
        <echo message="stage.release complete..."/>
        <echo message="Ready now to close, then release artifacts from: https://central.sonatype.com/publishing/deployments"/>
        <nbbrowse url="https://central.sonatype.com/publishing/deployments"/>
        <!-- https://central.sonatype.org/publish/publish-portal-upload/ -->
    </target>

</project>
