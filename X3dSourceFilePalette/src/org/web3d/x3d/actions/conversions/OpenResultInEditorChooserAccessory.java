/*
* Copyright (c) 1995-2021 held by the author(s) .  All rights reserved.
*  
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
*  
*  * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*  * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer
*       in the documentation and/or other materials provided with the
*       distribution.
*  * Neither the names of the Naval Postgraduate School (NPS)
*       Modeling Virtual Environments and Simulation (MOVES) Institute
*       (http://www.nps.edu and https://MovesInstitute.nps.edu)
*       nor the names of its contributors may be used to endorse or
*       promote products derived from this software without specific
*       prior written permission.
*  
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
* COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
* LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
* ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/

package org.web3d.x3d.actions.conversions;

import javax.swing.JCheckBox;

/**
 *
 * @author  Mike Bailey <jmbailey@nps.edu>
 */
public class OpenResultInEditorChooserAccessory extends javax.swing.JPanel
{
  
  /** Creates new form OpenResultInEditorChooserAccessory */
  public OpenResultInEditorChooserAccessory()
  {
    initComponents();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    OpenInEditorCheckBox = new javax.swing.JCheckBox();
    OpenInBrowserCheckBox = new javax.swing.JCheckBox();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jSeparator1 = new javax.swing.JSeparator();

    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText(org.openide.util.NbBundle.getMessage(OpenResultInEditorChooserAccessory.class, "OpenResultInEditorChooserAccessory.jLabel1.text")); // NOI18N
    jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

    jLabel2.setText(org.openide.util.NbBundle.getMessage(OpenResultInEditorChooserAccessory.class, "OpenResultInEditorChooserAccessory.jLabel2.text")); // NOI18N

    OpenInEditorCheckBox.setText(org.openide.util.NbBundle.getMessage(OpenResultInEditorChooserAccessory.class, "OpenResultInEditorChooserAccessory.OpenInEditorCheckBox.text")); // NOI18N
    OpenInEditorCheckBox.setVerticalAlignment(javax.swing.SwingConstants.TOP);

    OpenInBrowserCheckBox.setSelected(true);
    OpenInBrowserCheckBox.setText(org.openide.util.NbBundle.getMessage(OpenResultInEditorChooserAccessory.class, "OpenResultInEditorChooserAccessory.OpenInBrowserCheckBox.text")); // NOI18N

    jLabel3.setText(org.openide.util.NbBundle.getMessage(OpenResultInEditorChooserAccessory.class, "OpenResultInEditorChooserAccessory.jLabel3.text")); // NOI18N

    jLabel4.setText(org.openide.util.NbBundle.getMessage(OpenResultInEditorChooserAccessory.class, "OpenResultInEditorChooserAccessory.jLabel4.text")); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
              .addComponent(jLabel4)
              .addComponent(jLabel3)
              .addComponent(OpenInBrowserCheckBox)
              .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
            .addContainerGap())
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
              .addComponent(jLabel1)
              .addComponent(jLabel2)
              .addComponent(OpenInEditorCheckBox))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel4)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel3)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(OpenInBrowserCheckBox)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(OpenInEditorCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox OpenInBrowserCheckBox;
  private javax.swing.JCheckBox OpenInEditorCheckBox;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JSeparator jSeparator1;
  // End of variables declaration//GEN-END:variables

  public JCheckBox getOpenInEditorCheckBox()
  {
    return OpenInEditorCheckBox;
  }

  public void setOpenInEditorCheckBox(JCheckBox OpenCheckBox)
  {
    this.OpenInEditorCheckBox = OpenCheckBox;
  }

  public JCheckBox getOpenInBrowserCheckBox()
  {
    return OpenInBrowserCheckBox;
  }

  public void setOpenInBrowserCheckBox(JCheckBox OpenInBrowserCheckBox)
  {
    this.OpenInBrowserCheckBox = OpenInBrowserCheckBox;
  }
  
}
