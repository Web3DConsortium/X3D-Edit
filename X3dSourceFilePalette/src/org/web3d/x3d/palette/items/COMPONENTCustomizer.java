/*
Copyright (c) 1995-2021 held by the author(s) .  All rights reserved.
 
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
 
 * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer
      in the documentation and/or other materials provided with the
      distribution.
 * Neither the names of the Naval Postgraduate School (NPS)
      Modeling Virtual Environments and Simulation (MOVES) Institute
      (http://www.nps.edu and https://MovesInstitute.nps.edu)
      nor the names of its contributors may be used to endorse or
      promote products derived from this software without specific
      prior written permission.
 
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
 */
package org.web3d.x3d.palette.items;

import javax.swing.DefaultComboBoxModel;
import javax.swing.text.JTextComponent;
import org.openide.util.HelpCtx;
import static org.web3d.x3d.types.X3DSchemaData.*;

/**
 * COMPONENT.java
 * Created on March 14, 2007, 9:57 AM
 *
 * MOVES Institute
 * Naval Postgraduate School, Monterey, CA, USA
 * www.nps.edu
 *
 * @author Mike Bailey, Don Brutzman
 * @version $Id$
 */
public class COMPONENTCustomizer extends BaseCustomizer
{
  private COMPONENT component;
  private JTextComponent target;

  public COMPONENTCustomizer(COMPONENT component, JTextComponent target)
  {
    super(component);
    this.component = component;
    this.target = target;
   
    HelpCtx.setHelpIDString(this, "COMPONENT_ELEM_HELPID");
    
    initComponents();
    
    levelComboBox.setSelectedItem(component.getLevel());
    
    String componentName = component.getName();
    
    // setting any one value resets the others, so these initializations must come first
    nameComboBox.setSelectedIndex(-1);
    xj3dNameComboBox.setSelectedIndex(-1);
    avalonNameComboBox.setSelectedIndex(-1);

    for (String s : COMPONENT_ATTR_NAME_CHOICES)
    {
        if (componentName.equals(s)) 
        {
            nameComboBox.setSelectedItem(componentName);
            return;
        }
    }    
    for (String s : COMPONENT_ATTR_NAME_CHOICES_XJ3D)
    {
        if (componentName.equals(s)) 
        {
            xj3dNameComboBox.setSelectedItem(componentName);
            return;
        }
    }
    for (String s : COMPONENT_ATTR_NAME_CHOICES_AVALON)
    {
        if (componentName.equals(s)) 
        {
            avalonNameComboBox.setSelectedItem(componentName);
            return;
        }
    }
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        supportedComponentsPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameComboBox = new javax.swing.JComboBox<String>();
        levelLabel = new javax.swing.JLabel();
        levelComboBox = new javax.swing.JComboBox<String>();
        spacerLabel2 = new javax.swing.JLabel();
        experimentalComponentsPanel = new javax.swing.JPanel();
        avalonComponentLabel = new javax.swing.JLabel();
        avalonNameComboBox = new javax.swing.JComboBox<String>();
        xj3dComponentLabel = new javax.swing.JLabel();
        xj3dNameComboBox = new javax.swing.JComboBox<String>();
        spacerLabel1 = new javax.swing.JLabel();
        otherComponentLabel = new javax.swing.JLabel();
        otherComponentTextField = new javax.swing.JTextField();
        nodeHintPanel = new javax.swing.JPanel();
        nodeHintLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        supportedComponentsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Supported X3D components"));
        supportedComponentsPanel.setLayout(new java.awt.GridBagLayout());

        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        nameLabel.setText("name");
        nameLabel.setToolTipText("name of X3D component to add to current scene profile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 23, 3, 3);
        supportedComponentsPanel.add(nameLabel, gridBagConstraints);

        nameComboBox.setEditable(true);
        nameComboBox.setModel(new DefaultComboBoxModel<String>(COMPONENT_ATTR_NAME_CHOICES));
        nameComboBox.setToolTipText("enter or choose standard component name");
        nameComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nameComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        supportedComponentsPanel.add(nameComboBox, gridBagConstraints);

        levelLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        levelLabel.setText("level");
        levelLabel.setToolTipText("component level being added");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 10, 3, 3);
        supportedComponentsPanel.add(levelLabel, gridBagConstraints);

        levelComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { "1", "2", "3", "4", "5" }));
        levelComboBox.setToolTipText("component level being added");
        levelComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                levelComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        supportedComponentsPanel.add(levelComboBox, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        supportedComponentsPanel.add(spacerLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(supportedComponentsPanel, gridBagConstraints);

        experimentalComponentsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Experimental X3D components"));
        experimentalComponentsPanel.setLayout(new java.awt.GridBagLayout());

        avalonComponentLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        avalonComponentLabel.setText("Avalon component name");
        avalonComponentLabel.setToolTipText("name of X3D component to add to current profile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 23, 3, 3);
        experimentalComponentsPanel.add(avalonComponentLabel, gridBagConstraints);

        avalonNameComboBox.setEditable(true);
        avalonNameComboBox.setModel(new DefaultComboBoxModel<String>(COMPONENT_ATTR_NAME_CHOICES_AVALON));
        avalonNameComboBox.setToolTipText("enter or choose experimental Avalon component name");
        avalonNameComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                avalonNameComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        experimentalComponentsPanel.add(avalonNameComboBox, gridBagConstraints);

        xj3dComponentLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        xj3dComponentLabel.setText(" Xj3D component name");
        xj3dComponentLabel.setToolTipText("name of X3D component to add to current profile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 23, 3, 3);
        experimentalComponentsPanel.add(xj3dComponentLabel, gridBagConstraints);

        xj3dNameComboBox.setEditable(true);
        xj3dNameComboBox.setModel(new DefaultComboBoxModel<String>(COMPONENT_ATTR_NAME_CHOICES_XJ3D));
        xj3dNameComboBox.setToolTipText("enter or choose experimental Xj3D component name");
        xj3dNameComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                xj3dNameComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        experimentalComponentsPanel.add(xj3dNameComboBox, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.weightx = 1.0;
        experimentalComponentsPanel.add(spacerLabel1, gridBagConstraints);

        otherComponentLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        otherComponentLabel.setText(" Other component name");
        otherComponentLabel.setToolTipText("name of X3D component to add to current profile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 23, 3, 3);
        experimentalComponentsPanel.add(otherComponentLabel, gridBagConstraints);

        otherComponentTextField.setToolTipText("name of X3D component to add to current profile");
        otherComponentTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                otherComponentTextFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 23);
        experimentalComponentsPanel.add(otherComponentTextField, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(experimentalComponentsPanel, gridBagConstraints);

        nodeHintPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        nodeHintPanel.setLayout(new java.awt.GridBagLayout());

        nodeHintLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nodeHintLabel.setText("<html><b>component</b> element adds node capabilities to current scene profile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        nodeHintPanel.add(nodeHintLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(nodeHintPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void nameComboBoxActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_nameComboBoxActionPerformed
    {//GEN-HEADEREND:event_nameComboBoxActionPerformed
    Object saveSelection = nameComboBox.getSelectedItem(); // avoid callback collision
    xj3dNameComboBox.setSelectedIndex(-1);
    avalonNameComboBox.setSelectedIndex(-1);
    nameComboBox.setSelectedItem(saveSelection);           // avoid callback collision
    }//GEN-LAST:event_nameComboBoxActionPerformed

    private void levelComboBoxActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_levelComboBoxActionPerformed
    {//GEN-HEADEREND:event_levelComboBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_levelComboBoxActionPerformed

private void xj3dNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xj3dNameComboBoxActionPerformed
    int saveSelection = xj3dNameComboBox.getSelectedIndex(); // avoid callback collision
          nameComboBox.setSelectedIndex(-1);
    avalonNameComboBox.setSelectedIndex(-1);
    otherComponentTextField.setText("");
      xj3dNameComboBox.setSelectedIndex(saveSelection);      // avoid callback collision
}//GEN-LAST:event_xj3dNameComboBoxActionPerformed

private void avalonNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avalonNameComboBoxActionPerformed
    int saveSelection = avalonNameComboBox.getSelectedIndex(); // avoid callback collision
          nameComboBox.setSelectedIndex(-1);
      xj3dNameComboBox.setSelectedIndex(-1);
    otherComponentTextField.setText("");
    avalonNameComboBox.setSelectedIndex(saveSelection);        // avoid callback collision
}//GEN-LAST:event_avalonNameComboBoxActionPerformed

    private void otherComponentTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_otherComponentTextFieldActionPerformed
    {//GEN-HEADEREND:event_otherComponentTextFieldActionPerformed
     String saveSelection = otherComponentTextField.getText();// avoid callback collision
             nameComboBox.setSelectedIndex(-1);
       avalonNameComboBox.setSelectedIndex(-1);
         xj3dNameComboBox.setSelectedIndex(-1);
  otherComponentTextField.setText(saveSelection);             // avoid callback collision
    }//GEN-LAST:event_otherComponentTextFieldActionPerformed
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avalonComponentLabel;
    private javax.swing.JComboBox<String> avalonNameComboBox;
    private javax.swing.JPanel experimentalComponentsPanel;
    private javax.swing.JComboBox<String> levelComboBox;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JComboBox<String> nameComboBox;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nodeHintLabel;
    private javax.swing.JPanel nodeHintPanel;
    private javax.swing.JLabel otherComponentLabel;
    private javax.swing.JTextField otherComponentTextField;
    private javax.swing.JLabel spacerLabel1;
    private javax.swing.JLabel spacerLabel2;
    private javax.swing.JPanel supportedComponentsPanel;
    private javax.swing.JLabel xj3dComponentLabel;
    private javax.swing.JComboBox<String> xj3dNameComboBox;
    // End of variables declaration//GEN-END:variables

  @Override
  public String getNameKey()
  {
    return "NAME_X3D_COMPONENT";
  }

  @Override
  public void unloadInput()
  {
     component.setLevel(levelComboBox.getSelectedItem().toString().trim());
     
     if     ((nameComboBox.getSelectedIndex() >= 0) || (nameComboBox.getSelectedItem() != null)) // editable
     {
          component.setName(((String)nameComboBox.getSelectedItem()).trim());
          component.setExperimentalComponentXj3D   (false);
          component.setExperimentalComponentAvalon (false);
     }
     else if (xj3dNameComboBox.getSelectedIndex() >= 0)   // not editable
     {
          component.setName(((String)xj3dNameComboBox.getSelectedItem()).trim());
          component.setExperimentalComponentXj3D   (true);
          component.setExperimentalComponentAvalon (false);
     }
     else if (avalonNameComboBox.getSelectedIndex() >= 0) // not editable
     {
          component.setName(((String)avalonNameComboBox.getSelectedItem()).trim());
          component.setExperimentalComponentXj3D   (false);
          component.setExperimentalComponentAvalon (true);
     }
     else component.setName(otherComponentTextField.getText());
  }  
}
