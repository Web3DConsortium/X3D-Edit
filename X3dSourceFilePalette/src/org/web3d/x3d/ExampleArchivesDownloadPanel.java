/*
 * ExampleArchivesDownloadPanel.java
 *
 * Created on January 10, 2008, 4:09 PM
 */
/*
Copyright (c) 1995-2023 held by the author(s).  All rights reserved.
 
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
 
 * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer
      in the documentation and/or other materials provided with the
      distribution.
 * Neither the names of the Naval Postgraduate School (NPS)
      Modeling Virtual Environments and Simulation (MOVES) Institute
      (https://www.nps.edu and https://MovesInstitute.nps.edu)
      nor the names of its contributors may be used to endorse or
      promote products derived from this software without specific
      prior written permission.
 
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
 */

package org.web3d.x3d;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Properties;
import javax.swing.JFileChooser;
import org.apache.tools.ant.module.api.support.ActionUtils;
import org.openide.execution.ExecutorTask;
import org.openide.filesystems.FileLock;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;
import org.openide.util.HelpCtx;
import org.openide.util.Task;
import org.openide.util.TaskListener;
import org.web3d.x3d.actions.LocalExamplesFinder;
import org.web3d.x3d.options.X3dOptions;
import static org.web3d.x3d.options.X3dOptions.EXAMPLES_ROOT_DIRECTORY_DEFAULT;
import static org.web3d.x3d.options.X3dOptions.setExamplesRootDirectory;

/**
 *
 * @author  Mike Bailey <jmbailey@nps.edu>
 */
public class ExampleArchivesDownloadPanel extends javax.swing.JPanel
{
  private final String BASICEXAMPLESTARGET     = "Basic";
  private final String CONFORMANCENISTTARGET   = "ConformanceNist";
  private final String HUMANOIDANIMATIONTARGET = "HumanoidAnimation";
  private final String VRML20SOURCEBOOKTARGET  = "Vrml2.0Sourcebook";
  private final String SAVAGETARGET            = "Savage";
  private final String SAVAGEDEFENSETARGET     = "SavageDefense";
  private final String X3D4WA_EXAMPLESTARGET   = "X3dForWebAuthors";
  private final String X3D4AM_EXAMPLESTARGET   = "X3dForAdvancedModeling";
  
  private final String DEFAULTROOTDIR = System.getProperty("user.dir"); // "/";
  private final String targetPath     = "www.web3d.org/x3d/content/examples/";
  private final String antScriptPath  = "X3dAntScripts/examplesDownloaderAntScript.xml";
  
  private       String archiveDirectory = "";
  
  private JFileChooser fileChooser;
  private ExecutorTask task;
  
  /** Creates new form ExampleArchivesDownloadPanel */
  public ExampleArchivesDownloadPanel()
  {
    initComponents();
    HelpCtx.setHelpIDString(ExampleArchivesDownloadPanel.this, "helpExampleDownloads");
    
    // figure out root directory
    String originalDirectory = X3dOptions.getExamplesRootDirectory();
    String workingDirectory  = X3dOptions.getExamplesRootDirectory();
    if  (workingDirectory.contains("\\"))
         workingDirectory = workingDirectory.replace("\\","/");
    if  (workingDirectory.endsWith("/"))
         workingDirectory = workingDirectory.substring(0, workingDirectory.length() -1);
    if  (workingDirectory.endsWith("www.web3d.org/x3d/content/examples"))
    {
         workingDirectory = originalDirectory.substring(0, originalDirectory.indexOf("www.web3d.org") - 1);
         rootDownloadDirectoryTF.setText(workingDirectory);
    }
    else rootDownloadDirectoryTF.setText(X3dOptions.getExamplesRootDirectory());
    
    downloadDirectoryLabelUpdate (); // initialize
    downloadDirectoryOpenButton.setEnabled(Desktop.isDesktopSupported());
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        x3d4waExamplesCB = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        x3dForWebAuthorsTA = new javax.swing.JTextArea();
        x3d4amExamplesCB = new javax.swing.JCheckBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        x3dForAdvancedModelingTA = new javax.swing.JTextArea();
        basicExamplesCB = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        basicExamplesTA = new javax.swing.JTextArea();
        conformanceCB = new javax.swing.JCheckBox();
        vrmlSourcebookCB = new javax.swing.JCheckBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        vrmlTA = new javax.swing.JTextArea();
        savageCB = new javax.swing.JCheckBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        savageTA = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        downLoadLab = new javax.swing.JLabel();
        rootDownloadDirectoryTF = new javax.swing.JTextField();
        rootDownloadDirectoryChooserButton = new javax.swing.JButton();
        rootDownloadDirectoryDefaultButton = new javax.swing.JButton();
        downloadDirectoryNoteLabel = new javax.swing.JLabel();
        downloadDirectoryLabel = new javax.swing.JLabel();
        downloadDirectoryOpenButton = new javax.swing.JButton();
        startDownloadButton = new javax.swing.JButton();
        cancelDownloadButton = new javax.swing.JButton();
        conformanceCB1 = new javax.swing.JCheckBox();
        jScrollPane7 = new javax.swing.JScrollPane();
        conformanceTA1 = new javax.swing.JTextArea();
        humanoidAnimationCB = new javax.swing.JCheckBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        hanimTextArea = new javax.swing.JTextArea();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setLayout(new java.awt.GridBagLayout());

        x3d4waExamplesCB.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.x3d4waExamplesCB.text")); // NOI18N
        x3d4waExamplesCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                x3d4waExamplesCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(x3d4waExamplesCB, gridBagConstraints);

        jScrollPane1.setMaximumSize(new java.awt.Dimension(120, 24));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(120, 24));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(120, 24));

        x3dForWebAuthorsTA.setEditable(false);
        x3dForWebAuthorsTA.setColumns(20);
        x3dForWebAuthorsTA.setLineWrap(true);
        x3dForWebAuthorsTA.setRows(2);
        x3dForWebAuthorsTA.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.x3dForWebAuthorsTA.text")); // NOI18N
        x3dForWebAuthorsTA.setWrapStyleWord(true);
        x3dForWebAuthorsTA.setAutoscrolls(false);
        x3dForWebAuthorsTA.setMaximumSize(new java.awt.Dimension(80, 400));
        x3dForWebAuthorsTA.setMinimumSize(new java.awt.Dimension(80, 400));
        x3dForWebAuthorsTA.setPreferredSize(new java.awt.Dimension(80, 400));
        jScrollPane1.setViewportView(x3dForWebAuthorsTA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(jScrollPane1, gridBagConstraints);

        x3d4amExamplesCB.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.x3d4amExamplesCB.text")); // NOI18N
        x3d4amExamplesCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                x3d4amExamplesCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(x3d4amExamplesCB, gridBagConstraints);

        jScrollPane6.setMaximumSize(new java.awt.Dimension(120, 24));
        jScrollPane6.setMinimumSize(new java.awt.Dimension(120, 24));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(120, 24));

        x3dForAdvancedModelingTA.setEditable(false);
        x3dForAdvancedModelingTA.setColumns(20);
        x3dForAdvancedModelingTA.setLineWrap(true);
        x3dForAdvancedModelingTA.setRows(2);
        x3dForAdvancedModelingTA.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.x3dForAdvancedModelingTA.text")); // NOI18N
        x3dForAdvancedModelingTA.setWrapStyleWord(true);
        x3dForAdvancedModelingTA.setAutoscrolls(false);
        x3dForAdvancedModelingTA.setMaximumSize(new java.awt.Dimension(80, 400));
        x3dForAdvancedModelingTA.setMinimumSize(new java.awt.Dimension(80, 400));
        x3dForAdvancedModelingTA.setPreferredSize(new java.awt.Dimension(80, 400));
        jScrollPane6.setViewportView(x3dForAdvancedModelingTA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(jScrollPane6, gridBagConstraints);

        basicExamplesCB.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.basicExamplesCB.text")); // NOI18N
        basicExamplesCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                basicExamplesCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(basicExamplesCB, gridBagConstraints);

        jScrollPane2.setMaximumSize(new java.awt.Dimension(120, 24));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(120, 24));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(120, 24));

        basicExamplesTA.setEditable(false);
        basicExamplesTA.setColumns(20);
        basicExamplesTA.setLineWrap(true);
        basicExamplesTA.setRows(2);
        basicExamplesTA.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.basicExamplesTA.text")); // NOI18N
        basicExamplesTA.setWrapStyleWord(true);
        basicExamplesTA.setAutoscrolls(false);
        basicExamplesTA.setMaximumSize(new java.awt.Dimension(80, 400));
        basicExamplesTA.setMinimumSize(new java.awt.Dimension(80, 400));
        basicExamplesTA.setPreferredSize(new java.awt.Dimension(80, 400));
        jScrollPane2.setViewportView(basicExamplesTA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(jScrollPane2, gridBagConstraints);

        conformanceCB.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.conformanceCB.text")); // NOI18N
        conformanceCB.setMaximumSize(new java.awt.Dimension(250, 23));
        conformanceCB.setMinimumSize(new java.awt.Dimension(250, 23));
        conformanceCB.setPreferredSize(new java.awt.Dimension(250, 23));
        conformanceCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                conformanceCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(conformanceCB, gridBagConstraints);

        vrmlSourcebookCB.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.vrmlSourcebookCB.text")); // NOI18N
        vrmlSourcebookCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                vrmlSourcebookCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(vrmlSourcebookCB, gridBagConstraints);

        jScrollPane4.setMaximumSize(new java.awt.Dimension(120, 24));
        jScrollPane4.setMinimumSize(new java.awt.Dimension(120, 24));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(120, 24));

        vrmlTA.setEditable(false);
        vrmlTA.setColumns(20);
        vrmlTA.setLineWrap(true);
        vrmlTA.setRows(2);
        vrmlTA.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.vrmlTA.text")); // NOI18N
        vrmlTA.setWrapStyleWord(true);
        vrmlTA.setAutoscrolls(false);
        vrmlTA.setMaximumSize(new java.awt.Dimension(80, 400));
        vrmlTA.setMinimumSize(new java.awt.Dimension(80, 400));
        vrmlTA.setPreferredSize(new java.awt.Dimension(80, 400));
        jScrollPane4.setViewportView(vrmlTA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(jScrollPane4, gridBagConstraints);

        savageCB.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.savageCB.text")); // NOI18N
        savageCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                savageCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(savageCB, gridBagConstraints);

        jScrollPane5.setMaximumSize(new java.awt.Dimension(120, 24));
        jScrollPane5.setMinimumSize(new java.awt.Dimension(120, 24));
        jScrollPane5.setPreferredSize(new java.awt.Dimension(120, 24));

        savageTA.setEditable(false);
        savageTA.setColumns(20);
        savageTA.setLineWrap(true);
        savageTA.setRows(3);
        savageTA.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.savageTA.text")); // NOI18N
        savageTA.setWrapStyleWord(true);
        savageTA.setAutoscrolls(false);
        savageTA.setMaximumSize(new java.awt.Dimension(80, 400));
        savageTA.setMinimumSize(new java.awt.Dimension(80, 400));
        savageTA.setPreferredSize(new java.awt.Dimension(80, 400));
        jScrollPane5.setViewportView(savageTA);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(jScrollPane5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(6, 3, 6, 3);
        add(jSeparator1, gridBagConstraints);

        downLoadLab.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        downLoadLab.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.downLoadLab.text")); // NOI18N
        downLoadLab.setToolTipText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.downLoadLab.toolTipText")); // NOI18N
        downLoadLab.setMaximumSize(new java.awt.Dimension(120, 24));
        downLoadLab.setMinimumSize(new java.awt.Dimension(120, 24));
        downLoadLab.setPreferredSize(new java.awt.Dimension(120, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(downLoadLab, gridBagConstraints);

        rootDownloadDirectoryTF.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.rootDownloadDirectoryTF.text")); // NOI18N
        try
        {
            rootDownloadDirectoryTF.setText(new File(DEFAULTROOTDIR).getCanonicalPath());
        }
        catch(IOException ex) {}
        rootDownloadDirectoryTF.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rootDownloadDirectoryTFActionPerformed(evt);
            }
        });
        rootDownloadDirectoryTF.addPropertyChangeListener(new java.beans.PropertyChangeListener()
        {
            public void propertyChange(java.beans.PropertyChangeEvent evt)
            {
                rootDownloadDirectoryTFPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 500;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(rootDownloadDirectoryTF, gridBagConstraints);

        rootDownloadDirectoryChooserButton.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.rootDownloadDirectoryChooserButton.text")); // NOI18N
        rootDownloadDirectoryChooserButton.setMargin(null);
        rootDownloadDirectoryChooserButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rootDownloadDirectoryChooserButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(rootDownloadDirectoryChooserButton, gridBagConstraints);

        rootDownloadDirectoryDefaultButton.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.rootDownloadDirectoryDefaultButton.text")); // NOI18N
        rootDownloadDirectoryDefaultButton.setToolTipText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.rootDownloadDirectoryDefaultButton.toolTipText")); // NOI18N
        rootDownloadDirectoryDefaultButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rootDownloadDirectoryDefaultButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(rootDownloadDirectoryDefaultButton, gridBagConstraints);

        downloadDirectoryNoteLabel.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.downloadDirectoryNoteLabel.text")); // NOI18N
        downloadDirectoryNoteLabel.setToolTipText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.downloadDirectoryNoteLabel.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(downloadDirectoryNoteLabel, gridBagConstraints);

        downloadDirectoryLabel.setForeground(new java.awt.Color(0, 102, 51));
        downloadDirectoryLabel.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.downloadDirectoryLabel.text")); // NOI18N
        downloadDirectoryLabel.setToolTipText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.downloadDirectoryLabel.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 3);
        add(downloadDirectoryLabel, gridBagConstraints);

        downloadDirectoryOpenButton.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.downloadDirectoryOpenButton.text")); // NOI18N
        downloadDirectoryOpenButton.setMargin(null);
        downloadDirectoryOpenButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                downloadDirectoryOpenButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(downloadDirectoryOpenButton, gridBagConstraints);

        startDownloadButton.setForeground(new java.awt.Color(0, 102, 51));
        startDownloadButton.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.startDownloadButton.text")); // NOI18N
        startDownloadButton.setToolTipText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.startDownloadButton.toolTipText")); // NOI18N
        startDownloadButton.setMaximumSize(new java.awt.Dimension(120, 24));
        startDownloadButton.setMinimumSize(new java.awt.Dimension(120, 24));
        startDownloadButton.setPreferredSize(new java.awt.Dimension(120, 24));
        startDownloadButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                startDownloadButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(startDownloadButton, gridBagConstraints);

        cancelDownloadButton.setForeground(new java.awt.Color(153, 0, 0));
        cancelDownloadButton.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.cancelDownloadButton.text")); // NOI18N
        cancelDownloadButton.setEnabled(false);
        cancelDownloadButton.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cancelDownloadButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelDownloadButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(cancelDownloadButton, gridBagConstraints);

        conformanceCB1.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.conformanceCB1.text")); // NOI18N
        conformanceCB1.setMaximumSize(new java.awt.Dimension(250, 23));
        conformanceCB1.setMinimumSize(new java.awt.Dimension(250, 23));
        conformanceCB1.setPreferredSize(new java.awt.Dimension(250, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(conformanceCB1, gridBagConstraints);

        jScrollPane7.setMaximumSize(new java.awt.Dimension(120, 24));
        jScrollPane7.setMinimumSize(new java.awt.Dimension(120, 24));
        jScrollPane7.setPreferredSize(new java.awt.Dimension(120, 24));

        conformanceTA1.setEditable(false);
        conformanceTA1.setColumns(20);
        conformanceTA1.setLineWrap(true);
        conformanceTA1.setRows(4);
        conformanceTA1.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.conformanceTA1.text")); // NOI18N
        conformanceTA1.setWrapStyleWord(true);
        conformanceTA1.setAutoscrolls(false);
        conformanceTA1.setMaximumSize(new java.awt.Dimension(80, 400));
        conformanceTA1.setMinimumSize(new java.awt.Dimension(80, 400));
        conformanceTA1.setPreferredSize(new java.awt.Dimension(80, 400));
        jScrollPane7.setViewportView(conformanceTA1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(jScrollPane7, gridBagConstraints);

        humanoidAnimationCB.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.humanoidAnimationCB.text")); // NOI18N
        humanoidAnimationCB.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                humanoidAnimationCBActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(humanoidAnimationCB, gridBagConstraints);

        jScrollPane8.setMaximumSize(new java.awt.Dimension(120, 24));
        jScrollPane8.setMinimumSize(new java.awt.Dimension(120, 24));
        jScrollPane8.setPreferredSize(new java.awt.Dimension(120, 24));

        hanimTextArea.setEditable(false);
        hanimTextArea.setColumns(20);
        hanimTextArea.setLineWrap(true);
        hanimTextArea.setRows(4);
        hanimTextArea.setText(org.openide.util.NbBundle.getMessage(ExampleArchivesDownloadPanel.class, "ExampleArchivesDownloadPanel.hanimTextArea.text")); // NOI18N
        hanimTextArea.setWrapStyleWord(true);
        hanimTextArea.setAutoscrolls(false);
        hanimTextArea.setMaximumSize(new java.awt.Dimension(80, 400));
        hanimTextArea.setMinimumSize(new java.awt.Dimension(80, 400));
        hanimTextArea.setPreferredSize(new java.awt.Dimension(80, 400));
        jScrollPane8.setViewportView(hanimTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(jScrollPane8, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
  private void rootDownloadDirectoryChooserButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rootDownloadDirectoryChooserButtonActionPerformed
  {//GEN-HEADEREND:event_rootDownloadDirectoryChooserButtonActionPerformed
    if(fileChooser == null) {
      fileChooser = new JFileChooser();
      fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      fileChooser.setDialogTitle("Select archive root directory");
      fileChooser.setToolTipText("Archives will extract to "+targetPath);
      fileChooser.setCurrentDirectory(new File(rootDownloadDirectoryTF.getText()));
      fileChooser.setMultiSelectionEnabled(false);
    }
    
    int returnValue = fileChooser.showOpenDialog(this);
    if (returnValue != JFileChooser.APPROVE_OPTION)
        return;
    
    rootDownloadDirectoryTF.setText(fileChooser.getSelectedFile().getAbsolutePath());
    downloadDirectoryLabelUpdate (); // path adjustment, prerequisite to saving value in X3dOptions
    X3dOptions.setExamplesRootDirectory(archiveDirectory);
}//GEN-LAST:event_rootDownloadDirectoryChooserButtonActionPerformed

  private void startDownloadButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_startDownloadButtonActionPerformed
  {//GEN-HEADEREND:event_startDownloadButtonActionPerformed
    downloadDirectoryLabelUpdate (); // path adjustment, prerequisite to saving value in X3dOptions
    X3dOptions.setExamplesRootDirectory(archiveDirectory);
    
    ArrayList<String> targets = new ArrayList<>();

    if (x3d4waExamplesCB.isSelected())
        targets.add(X3D4WA_EXAMPLESTARGET);
    if (x3d4amExamplesCB.isSelected())
        targets.add(X3D4AM_EXAMPLESTARGET);
    if (basicExamplesCB.isSelected())
        targets.add(BASICEXAMPLESTARGET);
    if (conformanceCB.isSelected())
        targets.add(CONFORMANCENISTTARGET);
    if (humanoidAnimationCB.isSelected())
        targets.add(HUMANOIDANIMATIONTARGET);
    if (vrmlSourcebookCB.isSelected())
        targets.add(VRML20SOURCEBOOKTARGET);
    if (savageCB.isSelected())
        targets.add(SAVAGETARGET);

    if (targets.size() <= 0)
      return;
    
    String[] targetsArray = targets.toArray(new String[0]);

    Properties props = null;
    String targetDir = rootDownloadDirectoryTF.getText().trim();
    if (targetDir.length() > 0) {
      props = new Properties();
      props.put("examplesRootDirectory", targetDir);
    }

    try {
      FileObject buildFile = FileUtil.getConfigRoot()/*Repository.getDefault().getDefaultFileSystem()*/.getFileSystem().findResource(antScriptPath);
      // Can only execute ant tasks residing on disk, so get this out of the jar into a temp directory
      final File tmp = File.createTempFile(buildFile.getName(), buildFile.getExt());
      tmp.deleteOnExit();
      FileObject tmpFO = FileUtil.createData(tmp);
      FileLock lock = tmpFO.lock();
      OutputStream os = tmpFO.getOutputStream(lock);     
      FileUtil.copy(buildFile.getInputStream(), os);
      os.close();
      lock.releaseLock();

      task = ActionUtils.runTarget(tmpFO, targetsArray, props);
      task.addTaskListener(new taskListener());
      task.getInputOutput().select();
      startDownloadButton.setText("download started...");
      startDownloadButton.setEnabled(false);
        cancelDownloadButton.setEnabled(true);
        cancelDownloadButton.requestFocus(true);

      // Save the locations for the View menu
      File interimParentDirectory = new File(targetDir,targetPath);
      if (x3d4waExamplesCB.isSelected())
        LocalExamplesFinder.instance().setX3d4waExamplesDirectory           (new File(interimParentDirectory,X3D4WA_EXAMPLESTARGET).getAbsolutePath());
      if (x3d4waExamplesCB.isSelected())          
        LocalExamplesFinder.instance().setX3d4amExamplesDirectory           (new File(interimParentDirectory,X3D4AM_EXAMPLESTARGET).getAbsolutePath());
      if (basicExamplesCB.isSelected())          
        LocalExamplesFinder.instance().setBasicExamplesDirectory            (new File(interimParentDirectory,BASICEXAMPLESTARGET).getAbsolutePath());
      if (conformanceCB.isSelected())          
        LocalExamplesFinder.instance().setConformExamplesDirectory          (new File(interimParentDirectory,CONFORMANCENISTTARGET).getAbsolutePath());
      if (humanoidAnimationCB.isSelected())
        LocalExamplesFinder.instance().setHumanoidAnimationExamplesDirectory(new File(interimParentDirectory,HUMANOIDANIMATIONTARGET).getAbsolutePath());
      if (vrmlSourcebookCB.isSelected())
        LocalExamplesFinder.instance().setVrmlExamplesDirectory             (new File(interimParentDirectory,VRML20SOURCEBOOKTARGET).getAbsolutePath());
      if (savageCB.isSelected())          
        LocalExamplesFinder.instance().setSavageExamplesDirectory           (new File(interimParentDirectory,SAVAGETARGET).getAbsolutePath());
    }//GEN-LAST:event_startDownloadButtonActionPerformed
    catch (IOException | IllegalArgumentException ex) {
      task.getInputOutput().select();
      task.getInputOutput().getErr().append(ex.getMessage());
    }
  }
  
  public boolean isRunning()
  {
    return task != null;
  }
  
  class taskListener implements TaskListener
  {
    @Override
    public void taskFinished(Task task)
    {
      task = null;
      killTask(); // just for the buttons
    }    
  }
  public void killTask()
  {
    if(task != null) {
      task.stop();
      task = null;
    }
    startDownloadButton.setText("Start downloads");
    startDownloadButton.setEnabled(true);
    cancelDownloadButton.setEnabled(false);
  }
  private void cancelDownloadButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelDownloadButtonActionPerformed
  {//GEN-HEADEREND:event_cancelDownloadButtonActionPerformed
    killTask();
  }//GEN-LAST:event_cancelDownloadButtonActionPerformed

  private void savageCBActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_savageCBActionPerformed
  {//GEN-HEADEREND:event_savageCBActionPerformed
      downloadButtonRequestFocus();
  }//GEN-LAST:event_savageCBActionPerformed

    private void x3d4amExamplesCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x3d4amExamplesCBActionPerformed
       downloadButtonRequestFocus();
    }//GEN-LAST:event_x3d4amExamplesCBActionPerformed

    private void rootDownloadDirectoryTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootDownloadDirectoryTFActionPerformed
        downloadDirectoryLabelUpdate ();
    }//GEN-LAST:event_rootDownloadDirectoryTFActionPerformed

    private void rootDownloadDirectoryTFPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_rootDownloadDirectoryTFPropertyChange
        downloadDirectoryLabelUpdate ();
    }//GEN-LAST:event_rootDownloadDirectoryTFPropertyChange

    private void x3d4waExamplesCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x3d4waExamplesCBActionPerformed
        downloadButtonRequestFocus();
    }//GEN-LAST:event_x3d4waExamplesCBActionPerformed

    private void vrmlSourcebookCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vrmlSourcebookCBActionPerformed
        downloadButtonRequestFocus();
    }//GEN-LAST:event_vrmlSourcebookCBActionPerformed

    private void basicExamplesCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basicExamplesCBActionPerformed
        downloadButtonRequestFocus();
    }//GEN-LAST:event_basicExamplesCBActionPerformed

    private void conformanceCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conformanceCBActionPerformed
        downloadButtonRequestFocus();
    }//GEN-LAST:event_conformanceCBActionPerformed

    private void humanoidAnimationCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_humanoidAnimationCBActionPerformed
        downloadButtonRequestFocus();
    }//GEN-LAST:event_humanoidAnimationCBActionPerformed

    private void rootDownloadDirectoryDefaultButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rootDownloadDirectoryDefaultButtonActionPerformed
    {//GEN-HEADEREND:event_rootDownloadDirectoryDefaultButtonActionPerformed
        setExamplesRootDirectory(EXAMPLES_ROOT_DIRECTORY_DEFAULT); // user.dir
        rootDownloadDirectoryTF.setText(X3dOptions.getExamplesRootDirectory());
        downloadDirectoryLabelUpdate (); // re-initialize
    }//GEN-LAST:event_rootDownloadDirectoryDefaultButtonActionPerformed

    private void downloadDirectoryOpenButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_downloadDirectoryOpenButtonActionPerformed
    {//GEN-HEADEREND:event_downloadDirectoryOpenButtonActionPerformed
        if (Desktop.isDesktopSupported())
        {
            try
            {
                File archiveDirectoryFile = new File(archiveDirectory); // which is linked in downloadDirectoryLabel
                if  (archiveDirectoryFile.isDirectory())
                //   Desktop.getDesktop().browseFileDirectory(archiveDirectoryFile); // not supported on windows 8(
                     Desktop.getDesktop().browse(archiveDirectoryFile.toURI());
            }
            catch (IOException ioe) // if problem occurs, show in console
            {
                System.err.println(Arrays.toString(ioe.getStackTrace()));
            }
        }
    }//GEN-LAST:event_downloadDirectoryOpenButtonActionPerformed

    final void downloadDirectoryLabelUpdate ()
    {
        archiveDirectory = rootDownloadDirectoryTF.getText();
        if      (archiveDirectory.endsWith("\\"))
                 archiveDirectory = archiveDirectory +   "www.web3d.org\\x3d\\content\\examples"; // Windows path
        else if (archiveDirectory.contains("\\") || archiveDirectory.contains(":"))
                 archiveDirectory = archiveDirectory + "\\www.web3d.org\\x3d\\content\\examples"; // Windows path
        else if (archiveDirectory.endsWith("/"))
                 archiveDirectory = archiveDirectory +   "www.web3d.org/x3d/content/examples";    // Unix path
        else     archiveDirectory = archiveDirectory +  "/www.web3d.org/x3d/content/examples";    // Unix path
        downloadDirectoryLabel.setText("<html><b><code><a href='file:/" + archiveDirectory + "' target='_blank'>" + archiveDirectory + "</a></code></b>"); 
        X3dOptions.setExamplesRootDirectory(archiveDirectory);
        
        downloadButtonRequestFocus();
    }
    private void downloadButtonRequestFocus()
    {
        if (x3d4amExamplesCB.isSelected()    ||
            x3d4waExamplesCB.isSelected()    ||
            basicExamplesCB.isSelected()     ||
            conformanceCB.isSelected()       ||
            humanoidAnimationCB.isSelected() ||
            vrmlSourcebookCB.isSelected()    ||
            savageCB.isSelected()
            )
        {
            startDownloadButton.setEnabled(true);
            // https://stackoverflow.com/questions/8615958/java-gui-how-to-set-focus-on-jbutton-in-jpanel-on-jframe
            startDownloadButton.requestFocus();
        }
        else
        {
            startDownloadButton.setEnabled(false);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox basicExamplesCB;
    private javax.swing.JTextArea basicExamplesTA;
    private javax.swing.JButton cancelDownloadButton;
    private javax.swing.JCheckBox conformanceCB;
    private javax.swing.JCheckBox conformanceCB1;
    private javax.swing.JTextArea conformanceTA1;
    private javax.swing.JLabel downLoadLab;
    private javax.swing.JLabel downloadDirectoryLabel;
    private javax.swing.JLabel downloadDirectoryNoteLabel;
    private javax.swing.JButton downloadDirectoryOpenButton;
    private javax.swing.JTextArea hanimTextArea;
    private javax.swing.JCheckBox humanoidAnimationCB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton rootDownloadDirectoryChooserButton;
    private javax.swing.JButton rootDownloadDirectoryDefaultButton;
    private javax.swing.JTextField rootDownloadDirectoryTF;
    private javax.swing.JCheckBox savageCB;
    private javax.swing.JTextArea savageTA;
    private javax.swing.JButton startDownloadButton;
    private javax.swing.JCheckBox vrmlSourcebookCB;
    private javax.swing.JTextArea vrmlTA;
    private javax.swing.JCheckBox x3d4amExamplesCB;
    private javax.swing.JCheckBox x3d4waExamplesCB;
    private javax.swing.JTextArea x3dForAdvancedModelingTA;
    private javax.swing.JTextArea x3dForWebAuthorsTA;
    // End of variables declaration//GEN-END:variables
}
