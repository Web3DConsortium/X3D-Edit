/*
 * ReceiverPduDisplayPanel.java
 *
 * Created on October 26, 2008, 2:46 PM
 */
package org.web3d.x3d.dis.playerrecorder;

import edu.nps.moves.dis7.pdus.ReceiverPdu;

import org.openide.util.NbBundle;

/**
 *
 * @author  mike
 */
public class ReceiverPduDisplayPanel extends javax.swing.JPanel
{
  /** Creates new form ReceiverPduDisplayPanel */
  public ReceiverPduDisplayPanel()
  {
    initComponents();
  }

  public void setData(ReceiverPdu pdu)
  {
    pduHeaderDisplayPanel1.setData(pdu);
    entityIDDisplayPanel.setData(pdu.getHeader().getRadioReferenceID());

    radioIDTF.setText("" + pdu.getTransmitterEntityId());
    paddingTF.setText("" + pdu.getPadding1());
    recvrStateTF.setText(pdu.getReceiverState().getDescription());
    recvPowerTF.setText("" + pdu.getReceivedPower());

    transmitterEntityIDDisplayPanel.setData(pdu.getTransmitterEntityId());
    transmitterRadioIDTF.setText("" + pdu.getTransmitterRadioId());
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    pduHeaderDisplayPanel1 = new org.web3d.x3d.dis.playerrecorder.PduHeaderDisplayPanel();
    entityIDDisplayPanel = new org.web3d.x3d.dis.playerrecorder.EntityIDDisplayPanel();
    transmitterEntityIDDisplayPanel = new org.web3d.x3d.dis.playerrecorder.EntityIDDisplayPanel();
    jPanel1 = new javax.swing.JPanel();
    recvrStateLab = new javax.swing.JLabel();
    recvrStateTF = new javax.swing.JTextField();
    recvPowerLab = new javax.swing.JLabel();
    recvPowerTF = new javax.swing.JTextField();
    radioIDLab = new javax.swing.JLabel();
    radioIDTF = new javax.swing.JTextField();
    paddingLab = new javax.swing.JLabel();
    paddingTF = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    transmitterRadioIDTF = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();

    setLayout(new java.awt.GridBagLayout());

    pduHeaderDisplayPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("PDU Header"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    add(pduHeaderDisplayPanel1, gridBagConstraints);

    entityIDDisplayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Entity ID"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    add(entityIDDisplayPanel, gridBagConstraints);

    transmitterEntityIDDisplayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Transmitter Entity"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
    add(transmitterEntityIDDisplayPanel, gridBagConstraints);

    jPanel1.setLayout(new java.awt.GridBagLayout());

    recvrStateLab.setText(NbBundle.getMessage(getClass(), "ReceiverPduDisplayPanel.recvrStateLab.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
    jPanel1.add(recvrStateLab, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    jPanel1.add(recvrStateTF, gridBagConstraints);

    recvPowerLab.setText(NbBundle.getMessage(getClass(), "ReceiverPduDisplayPanel.recvPowerLab.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
    jPanel1.add(recvPowerLab, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
    jPanel1.add(recvPowerTF, gridBagConstraints);

    radioIDLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    radioIDLab.setText(NbBundle.getMessage(getClass(), "ReceiverPduDisplayPanel.radioIDLab.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 3);
    jPanel1.add(radioIDLab, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 5);
    jPanel1.add(radioIDTF, gridBagConstraints);

    paddingLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    paddingLab.setText(NbBundle.getMessage(getClass(), "ReceiverPduDisplayPanel.paddingLab.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 3);
    jPanel1.add(paddingLab, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 3);
    jPanel1.add(paddingTF, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
    add(jPanel1, gridBagConstraints);

    jLabel2.setText(NbBundle.getMessage(getClass(), "ReceiverPduDisplayPanel.jLabel2.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    add(jLabel2, gridBagConstraints);

    transmitterRadioIDTF.setMinimumSize(new java.awt.Dimension(71, 22));
    transmitterRadioIDTF.setPreferredSize(new java.awt.Dimension(71, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
    add(transmitterRadioIDTF, gridBagConstraints);

    jLabel1.setText(NbBundle.getMessage(getClass(), "ReceiverPduDisplayPanel.jLabel1.text")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    add(jLabel1, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private org.web3d.x3d.dis.playerrecorder.EntityIDDisplayPanel entityIDDisplayPanel;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JLabel paddingLab;
  private javax.swing.JTextField paddingTF;
  private org.web3d.x3d.dis.playerrecorder.PduHeaderDisplayPanel pduHeaderDisplayPanel1;
  private javax.swing.JLabel radioIDLab;
  private javax.swing.JTextField radioIDTF;
  private javax.swing.JLabel recvPowerLab;
  private javax.swing.JTextField recvPowerTF;
  private javax.swing.JLabel recvrStateLab;
  private javax.swing.JTextField recvrStateTF;
  private org.web3d.x3d.dis.playerrecorder.EntityIDDisplayPanel transmitterEntityIDDisplayPanel;
  private javax.swing.JTextField transmitterRadioIDTF;
  // End of variables declaration//GEN-END:variables
}
