/*
 * INTEGERSEQUENCERCustomizer_new.java
 *
 * Created on January 8, 2008, 11:34 AM
 */

package org.web3d.x3d.palette.items;

import javax.swing.text.JTextComponent;
import org.openide.util.HelpCtx;

/**
 *
 * @author  Mike Bailey <jmbailey@nps.edu>, Don Brutzman
 */
public class INTEGERTRIGGERCustomizer extends BaseCustomizer
{  
  private INTEGERTRIGGER trig;
  private JTextComponent target;

  public INTEGERTRIGGERCustomizer(INTEGERTRIGGER node, JTextComponent target)
  {
    super(node);
    this.trig = node;
    this.target = target;

    HelpCtx.setHelpIDString(this, "INTEGERTRIGGER_ELEM_HELPID");

    initComponents();

    integerKeyTF.setText(trig.getIntegerKey().trim());
  }  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        org.web3d.x3d.palette.items.DEFUSEpanel dEFUSEpanel1 = getDEFUSEpanel();
        integerKeyLabel = new javax.swing.JLabel();
        integerKeyTF = new javax.swing.JTextField();
        fieldEventDiagramLabel = new javax.swing.JLabel();
        eventHintPanel1 = new javax.swing.JPanel();
        eventLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(dEFUSEpanel1, gridBagConstraints);

        integerKeyLabel.setText(org.openide.util.NbBundle.getMessage(INTEGERTRIGGERCustomizer.class, "INTEGERTRIGGERCustomizer.integerKeyLabel.text")); // NOI18N
        integerKeyLabel.setToolTipText(org.openide.util.NbBundle.getMessage(INTEGERTRIGGERCustomizer.class, "INTEGERTRIGGERCustomizer.integerKeyLabel.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 63, 6, 3);
        add(integerKeyLabel, gridBagConstraints);

        integerKeyTF.setText(org.openide.util.NbBundle.getMessage(INTEGERTRIGGERCustomizer.class, "INTEGERTRIGGERCustomizer.integerKeyTF.text")); // NOI18N
        integerKeyTF.setToolTipText(org.openide.util.NbBundle.getMessage(INTEGERTRIGGERCustomizer.class, "INTEGERTRIGGERCustomizer.integerKeyTF.toolTipText")); // NOI18N
        integerKeyTF.setMinimumSize(new java.awt.Dimension(40, 20));
        integerKeyTF.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 3, 6, 3);
        add(integerKeyTF, gridBagConstraints);

        fieldEventDiagramLabel.setBackground(new java.awt.Color(255, 255, 255));
        fieldEventDiagramLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fieldEventDiagramLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/web3d/x3d/palette/items/resources/IntegerTriggerFieldEvents.png"))); // NOI18N
        fieldEventDiagramLabel.setToolTipText(org.openide.util.NbBundle.getMessage(INTEGERTRIGGERCustomizer.class, "INTEGERTRIGGERCustomizer.fieldEventDiagramLabel.toolTipText")); // NOI18N
        fieldEventDiagramLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(fieldEventDiagramLabel, gridBagConstraints);

        eventHintPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        eventHintPanel1.setToolTipText(org.openide.util.NbBundle.getMessage(INTEGERTRIGGERCustomizer.class, "INTEGERTRIGGERCustomizer.eventHintPanel1.toolTipText")); // NOI18N
        eventHintPanel1.setLayout(new java.awt.GridBagLayout());

        eventLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eventLabel.setText("<html><b>IntegerTrigger</b> gets <i>set_boolean</i> <span style=\"color:green; font-weight: bold;\">true</span> input events to provide <i>integerKey</i> values as <i>triggerValue</i> output events");
        eventLabel.setToolTipText(org.openide.util.NbBundle.getMessage(INTEGERTRIGGERCustomizer.class, "INTEGERTRIGGERCustomizer.eventLabel.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        eventHintPanel1.add(eventLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(eventHintPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
  
  @Override
  public String getNameKey()
  {
    return "NAME_X3D_INTEGERTRIGGER";
  }
  
  @Override
  public void unloadInput() throws IllegalArgumentException
  {
    unLoadDEFUSE();

    trig.setIntegerKey(integerKeyTF.getText().trim());
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel eventHintPanel1;
    private javax.swing.JLabel eventLabel;
    private javax.swing.JLabel fieldEventDiagramLabel;
    private javax.swing.JLabel integerKeyLabel;
    private javax.swing.JTextField integerKeyTF;
    // End of variables declaration//GEN-END:variables

}
