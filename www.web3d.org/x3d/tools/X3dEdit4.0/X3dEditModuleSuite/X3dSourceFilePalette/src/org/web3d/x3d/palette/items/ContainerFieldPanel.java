/*
 * ContainerFieldPanel.java
 *
 * Created on November 28, 2007, 4:19 PM
 */

package org.web3d.x3d.palette.items;

import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author  mike
 */
public class ContainerFieldPanel extends javax.swing.JPanel
{
  
  /** Creates new form ContainerFieldPanel */
  public ContainerFieldPanel()
  {
    initComponents();
  }

  public String getContainerField()
  {
    if(checkBox.isSelected())
      return (String)containerFieldCombo.getSelectedItem();
    return null;
  }

  public void setContainerFieldModel(String[] containerFieldValues)
  {
    containerFieldCombo.setModel(new DefaultComboBoxModel<String>(containerFieldValues));
  }

  // overriding single tooltip, consider overriding individual tooltips for each combobox list entry
  public void setContainerFieldTooltips(String containerFieldTooltips)
  {
    containerFieldCombo.setToolTipText(containerFieldTooltips);
  }

  public void setContainerFieldModel(String[] containerFieldValues, String containerFieldTooltips)
  {
    containerFieldCombo.setModel(new DefaultComboBoxModel<String>(containerFieldValues));
    this.setContainerFieldTooltips (containerFieldTooltips);
  }
  
  public void setContainerField(String containerField)
  {
    if(containerField != null && containerField.length()>0)
      containerFieldCombo.setSelectedItem(containerField);
  }

  boolean getUseContainerField()
  {
    return checkBox.isSelected();
  }

  void setUseContainerField(boolean b)
  {
    checkBox.setSelected(b);
    checkBoxAction(null);
  }
    
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        checkBox = new javax.swing.JCheckBox();
        containerFieldCombo = new javax.swing.JComboBox<String>();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        setMinimumSize(new java.awt.Dimension(250, 0));
        setPreferredSize(new java.awt.Dimension(250, 64));
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(org.openide.util.NbBundle.getMessage(ContainerFieldPanel.class, "ContainerFieldPanel.jLabel1.text")); // NOI18N
        jLabel1.setToolTipText(org.openide.util.NbBundle.getMessage(ContainerFieldPanel.class, "ContainerFieldPanel.jLabel1.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 92;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(jLabel1, gridBagConstraints);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        checkBox.setText(org.openide.util.NbBundle.getMessage(ContainerFieldPanel.class, "ContainerFieldPanel.checkBox.text")); // NOI18N
        checkBox.setToolTipText(org.openide.util.NbBundle.getMessage(ContainerFieldPanel.class, "ContainerFieldPanel.checkBox.toolTipText")); // NOI18N
        checkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxAction(evt);
            }
        });
        jPanel2.add(checkBox);

        containerFieldCombo.setEditable(true);
        containerFieldCombo.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { "schema default", "2" }));
        containerFieldCombo.setToolTipText(org.openide.util.NbBundle.getMessage(ContainerFieldPanel.class, "ContainerFieldPanel.containerFieldCombo.toolTipText")); // NOI18N
        containerFieldCombo.setAutoscrolls(true);
        containerFieldCombo.setEnabled(false);
        containerFieldCombo.setMinimumSize(new java.awt.Dimension(150, 18));
        containerFieldCombo.setPreferredSize(new java.awt.Dimension(160, 20));
        containerFieldCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                containerFieldComboActionPerformed(evt);
            }
        });
        jPanel2.add(containerFieldCombo);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = -13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(jPanel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

  private void checkBoxAction(java.awt.event.ActionEvent evt)//GEN-FIRST:event_checkBoxAction
  {//GEN-HEADEREND:event_checkBoxAction
    containerFieldCombo.setEnabled(checkBox.isSelected());
}//GEN-LAST:event_checkBoxAction

    private void containerFieldComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_containerFieldComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_containerFieldComboActionPerformed
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JComboBox<String> containerFieldCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
  
}
